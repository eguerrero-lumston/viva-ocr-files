$base-color: #E4E4E4;
$date-picker-bg-color: white;

.container{
    margin: 1rem;
    margin-top: 0;
}
// mat-icon-stepper selected color change 
::ng-deep .mat-step-header .mat-step-icon-selected, .mat-step-header .mat-step-icon-state-done, .mat-step-header .mat-step-icon-state-edit {
    background-color: $base-color!important;
}

//input outline color
::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {
    color: $base-color!important;
    // opacity: 1!important;
}

//mat-input focused color
::ng-deep .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {
    color: $base-color!important;
}

// mat-input error outline color
::ng-deep .mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick{
    color: $base-color!important;
    opacity: 0.8!important;
}

// mat-input carent color
::ng-deep .mat-input-element {
    caret-color: $base-color!important;
}

// mat-input error carent color
::ng-deep .mat-form-field-invalid .mat-input-element, .mat-warn .mat-input-element {
    caret-color: $base-color!important;
}

// mat-label normal state style
::ng-deep .mat-form-field-label {
    color: rgba(0,0,0,.6)!important;
    // color: $mainColor!important;
}

// mat-label focused style
::ng-deep .mat-form-field.mat-focused .mat-form-field-label {
    color: $base-color!important;
}

// mat-label error style
::ng-deep .mat-form-field.mat-form-field-invalid .mat-form-field-label {
    color: $base-color!important;
}

::ng-deep .mat-focused .mat-form-field-label {
    /*change color of label*/
    color: $date-picker-bg-color !important;
}

::ng-deep.mat-form-field-outline {
    /*change color of underline*/
    background-color: $date-picker-bg-color !important;
    border-radius: 5px;
} 

::ng-deep.mat-form-field-ripple {
    /*change color of underline when focused*/
    background-color: $date-picker-bg-color !important;
    border-radius: 5px;
}

::ng-deep .mat-form-field-flex > .mat-form-field-infix { padding: 0px 0px 5px 0px !important;}

::ng-deep .mat-form-field-label-wrapper { top: -1.5em; }

::ng-deep .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {
    transform: translateY(-1.1em) scale(.75);
    width: 100%;
}

mat-form-field {
    width: 110px;
    max-width: 160px;
    margin-top: 20px;
    border-color: $base-color;
    // height: 50px;
    // margin: 12px;
}
ng-select{
    width: 70%;
    max-width: 160px;
    width: 110px;
}
.ng-select-container {

    height: 40px;
}
.title-search {
    font-size: 0.9rem;
    margin: 10px;
    color: #1C1C1C;
    font-weight: bold;
}

.item-folder {
    padding: 10px;
    cursor:pointer;
}

.icon-folder {
    height: 100px;
    // margin-bottom: -10px;
}

.time-picker {
    width: 70%;
    max-width: 160px;
    width: 110px;
    height: 30px;
    border: 1px solid $base-color;
    border-radius: 4px;
    box-sizing: border-box;
    margin: 8px 0;
    padding: 12px 20px;
    display: inline-block;
    // border-
    // margin-top: 0px;
}

.input-manifest{
    width: 70%;
    max-width: 160px;
    width: 110px;
    height: 30px;
    border: 1px solid $base-color;
    border-radius: 4px;
    box-sizing: border-box;
    // margin-left: 5px;
    padding-left: 12px;
    display: inline-block;
}

.breadcrumb {
    background: none;
    font-size: 1em;
    margin: 0;
    span,
    span {
      color: black;
      cursor: pointer;
    }
    span:hover,
    span:hover {
      color: dimgrey;
      text-decoration: none;
    }
    li {
      list-style: none;
      float: left;
      margin: 5px;
    }
    li:last-child {
      margin-right: 20px;
    }
    li::after {
      content: "/";
      color: black;
    }
    li:first-child::after {
      content: "";
    }
}

#time:invalid:before {
    color: #808080;
    content: attr(placeholder);
    padding-left: 10px;
    pointer-events: none;
    position: absolute;
    left: 20px;
}

  input[type=time]:valid,
  input[type=time]:focus,
  input[type=time]:active {
    color: #000;
}

  input[type=time]:valid:before,
  input[type=time]:focus:before,
  input[type=time]:active:before {
    display: none;
}
  
  